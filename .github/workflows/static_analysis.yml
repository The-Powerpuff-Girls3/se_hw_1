name: Static Analysis and Update Badges

on:
  push:
    paths:
      - 'hw2/**'
  pull_request:
    paths:
      - 'hw2/**'

jobs:
  static-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install autopep8 pyright pylint

      - name: Run autopep8
        run: |
          autopep8 --in-place --recursive hw2

      - name: Run pylint
        run: |
          pylint hw2/*.py > pylint_report.txt || true

      - name: Run pyright
        run: |
          pyright hw2 --outputjson > pyright_report.json || true

      - name: Upload lint reports
        uses: actions/upload-artifact@v3
        with:
          name: lint-reports
          path: |
            pylint_report.txt
            pyright_report.json

update-badges:
  runs-on: ubuntu-latest
  needs: static-analysis

  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download lint reports
      uses: actions/download-artifact@v3
      with:
        name: lint-reports

    - name: List downloaded artifact files
      run: |
        echo "Directory contents after downloading artifact:"
        ls -la

    - name: Generate badge URLs
      id: badge
      run: |
        if [ -f pylint_report.txt ]; then
          pylint_issues=$(grep -c '' pylint_report.txt || echo "0")
        else
          pylint_issues=0
        fi
        if [ -f pyright_report.json ]; then
          pyright_issues=$(jq '.results[] | select(.severity == "error") | length' pyright_report.json || echo "0")
        else
          pyright_issues=0
        fi
        pylint_badge="https://img.shields.io/badge/pylint-${pylint_issues}-red"
        pyright_badge="https://img.shields.io/badge/pyright-${pyright_issues}-red"
        echo "pylint_badge=$pylint_badge" >> $GITHUB_ENV
        echo "pyright_badge=$pyright_badge" >> $GITHUB_ENV

    - name: Update README with badges
      run: |
        sed -i "s|!\\[Pylint\\](.*)|![Pylint](${{ env.pylint_badge }})|g" README.md
        sed -i "s|!\\[Pyright\\](.*)|![Pyright](${{ env.pyright_badge }})|g" README.md

    - name: Commit and push changes
      uses: EndBug/add-and-commit@v9
      with:
        author_name: 'github-actions'
        author_email: 'github-actions@github.com'
        message: 'Update README.md with latest badges'
        token: ${{ secrets.GITHUB_TOKEN }}
